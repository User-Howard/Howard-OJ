name: Process Issue Title

on:
  issues:
    types: [opened]
  workflow_dispatch:
jobs:
  process_title:
    runs-on: ubuntu-latest
    steps:
    - name: Extract folder path and file name
      id: extract_input
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const payload = context.payload;
          console.log(payload.issue); // Add this line to check if payload.issue is available
          const labels = payload.issue.labels.map(label => label.name);
          if (labels.includes('want to solve')) {
            const title = payload.issue.title;
            const folder_path = title.match(/\[(.*?)\]/)[1];
            const file_name = title.split(' ')[1];
            console.log(`folder_path = ${folder_path}`);
            console.log(`file_name = ${file_name}`);
            console.log(`issue_number = ${payload.issue.number}`);
            core.setOutput('folder_path', folder_path);
            core.setOutput('file_name', file_name);
            core.setOutput('issue_number', payload.issue.number);
            
    - name: Generate URL
      id: generate_url
      run: python .github/scripts/generate_url.py "${{ steps.extract_input.outputs.folder_path }}"

    - name: Reply to issue with generated URL
      if: steps.extract_input.outputs.folder_path != '' && steps.generate_url.outputs.url != ''
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const message = `Here is the relevant URL: ${{ steps.generate_url.outputs.url }}`;
          console.log(message);
          github.issues.createComment({
            issue_number: ${{ steps.extract_input.outputs.issue_number }},
            body: message
          });
