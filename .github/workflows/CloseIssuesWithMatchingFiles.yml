name: CloseIssuesWithMatchingFiles

on:
  schedule:
    - cron: "0 0 * * *"  # 每天 UTC 00:00 运行一次
    
  workflow_dispatch:

jobs:
  close_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Run script to close issues
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          REPO_OWNER: ${{ secrets.REPO_OWNER }}
          REPO_NAME: ${{ secrets.REPO_NAME }}
        run: |
          # 获取所有问题
          ISSUES=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues")

          # 遍历每个问题
          for row in $(echo "${ISSUES}" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }

            # 获取问题标题
            ISSUE_TITLE=$(_jq '.title')
            
            # 提取问题标题中的文件夹名和文件名
            FOLDER=$(echo "$ISSUE_TITLE" | cut -d'/' -f1)
            FILE=$(echo "$ISSUE_TITLE" | cut -d'/' -f2)

            # 检查文件是否存在
            if curl -s -o /dev/null -I -w "%{http_code}" -H "Authorization: token $ACCESS_TOKEN" "https://raw.githubusercontent.com/$REPO_OWNER/$REPO_NAME/main/$FOLDER/$FILE" | grep -q 200; then
              # 如果找到了文件，则关闭问题
              ISSUE_NUMBER=$(_jq '.number')
              curl -s -X PATCH -H "Authorization: token $ACCESS_TOKEN" -d '{"state":"closed"}' "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/$ISSUE_NUMBER"
              echo "Closed issue: $ISSUE_TITLE"
            fi
          done
