name: CloseIssuesWithMatchingFiles

on:
  schedule:
    - cron: "0 0 * * *"  # 每天 UTC 00:00 运行一次
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  close_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run script to close issues
        env:
          ACCESS_TOKEN: ${{ secrets.MODIFY_ISSUE_TOKEN }}
          REPO_OWNER: "User-Howard"
          REPO_NAME: "Howard-OJ"
        run: |
          ISSUES=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues")
          if echo "$ISSUES" | jq empty; then
            for row in $(echo "${ISSUES}" | jq -r '.[] | @base64'); do
              _jq() {
                echo ${row} | base64 --decode | jq -r ${1}
              }
              ISSUE_TITLE=$(_jq '.title')
              folder_path=$(echo "$ISSUE_TITLE" | grep -o '\[.*\]' | tr -d '[]')
              file_name=$(echo "$ISSUE_TITLE" | awk '{print $2}')

              echo "folder_path = $folder_path"
              echo "file_name = $file_name"

              if [ -f "$folder_path/$file_name.cpp" ] || [ -f "$folder_path/$file_name.py" ]; then
                echo "File exists in $folder_path folder."
                ISSUE_NUMBER=$(_jq '.number')
                curl -s -X PATCH -H "Authorization: token $ACCESS_TOKEN" -d '{"state":"closed"}' "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/$ISSUE_NUMBER"
                echo "Closed issue: $ISSUE_TITLE"
              else
                echo "File does not exist in $folder_path folder."
              fi
            done
          else
            echo "Failed to parse issues JSON response."
            echo "Response: $ISSUES"
          fi
